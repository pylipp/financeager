[metadata]
name = financeager
description = command line tool for organizing finances
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/pylipp/financeager
author = Philipp Metzner
author_email = beth.aleph@yahoo.de
license = GPLv3
keywords = commandline finances
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Console
    Intended Audience :: End Users/Desktop
    Intended Audience :: Other Audience
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: Unix
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Office/Business :: Financial
    Topic :: Database
    Topic :: Utilities

[options]
packages = find:
install_requires =
    tinydb==4.6.0
    python-dateutil==2.8.2
    marshmallow==3.14.1
    argcomplete==2.0.0
    appdirs==1.4.4

[options.packages.find]
exclude = test

[options.entry_points]
console_scripts =
    fina = financeager.cli:main

[options.extras_require]
fancy =
    rich==11.0.0
packaging =
    build
    twine>=1.11.0
develop =
    coverage==6.2
    pre-commit==2.17.0
    gitlint-core==0.17.0
    flake8==4.0.1
    black==21.12b0
    isort==5.10.1

[coverage:run]
branch = true
source = financeager
omit =
    financeager/rich.py

[coverage:report]
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:
    except Exception:
    def .*main()
omit =
    financeager/rich.py

[isort]
profile = black
line_length = 88
multi_line_output = 3
include_trailing_comma = True
ensure_newline_before_comments = True
known_third_party = appdirs,argcomplete,dateutil,marshmallow,pkg_resources,setuptools,tinydb

[flake8]
max-line-length = 88
ignore = E731,  # do not assign a lambda expression, use a def
         W503,  # line break before binary operator
         W504,  # line break after binary operator

[yapf]
# The column limit.
column_limit=80

# Set to True to prefer splitting before 'and' or 'or' rather than
# after.
split_before_logical_operator=False

space_between_ending_comma_and_closing_bracket=False
